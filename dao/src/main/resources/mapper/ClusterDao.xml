<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ClusterDao">
  <resultMap id="ClusterMap" type="ClusterDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <id column="status" jdbcType="INTEGER" property="status" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtModify" />

    <result column="cluster_name" jdbcType="VARCHAR" property="clusterName" />
    <result column="zookeeper" jdbcType="VARCHAR" property="zookeeper" />
    <result column="bootstrap_servers" jdbcType="VARCHAR" property="bootstrapServers" />
    <result column="kafka_version" jdbcType="VARCHAR" property="kafkaVersion" />
    <result column="alarm_flag" jdbcType="INTEGER" property="alarmFlag" />
    <result column="security_protocol" jdbcType="VARCHAR" property="securityProtocol" />
    <result column="sasl_mechanism" jdbcType="VARCHAR" property="saslMechanism" />
    <result column="sasl_jaas_config" jdbcType="VARCHAR" property="saslJaasConfig" />
  </resultMap>

  <insert id="insert" parameterType="com.xiaojukeji.kafka.manager.common.entity.po.ClusterDO" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO cluster (
      cluster_name, zookeeper, bootstrap_servers, kafka_version, alarm_flag,
      security_protocol, sasl_mechanism, sasl_jaas_config
    ) VALUES (
      #{clusterName}, #{zookeeper}, #{bootstrapServers}, #{kafkaVersion}, #{alarmFlag},
      #{securityProtocol}, #{saslMechanism}, #{saslJaasConfig}
    )
  </insert>

  <delete id="deleteById" parameterType="java.lang.Long">
    DELETE FROM cluster id = #{id}
  </delete>

  <update id="updateById" parameterType="com.xiaojukeji.kafka.manager.common.entity.po.ClusterDO">
    UPDATE cluster SET
      cluster_name=#{clusterName},
      zookeeper=#{zookeeper},
      bootstrap_servers=#{bootstrapServers},
      kafka_version=#{kafkaVersion},
      alarm_flag=#{alarmFlag},
      security_protocol=#{securityProtocol},
      sasl_mechanism=#{saslMechanism},
      sasl_jaas_config=#{saslJaasConfig}
    WHERE id = #{id}
  </update>

  <select id="getByOption" parameterType="com.xiaojukeji.kafka.manager.common.entity.po.query.ClusterQueryOption" resultMap="ClusterMap">
    SELECT * FROM cluster where status >= 0
    <trim>
      <if test="id != null">
        AND id=#{id}
      </if>
      <if test="clusterName != null">
        AND cluster_name=#{clusterName}
      </if>
    </trim>
  </select>
</mapper>