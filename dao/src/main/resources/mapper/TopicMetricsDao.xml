<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="TopicMetricsDao">
	<resultMap id="TopicMetricsMap" type="TopicMetrics">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="cluster_id" jdbcType="BIGINT" property="clusterId" />
		<result column="topic_name" jdbcType="VARCHAR" property="topicName" />
		<result column="bytes_in" jdbcType="DOUBLE" property="bytesInPerSec" />
		<result column="bytes_out" jdbcType="DOUBLE" property="bytesOutPerSec" />
		<result column="messages_in" jdbcType="DOUBLE" property="messagesInPerSec" />
		<result column="bytes_rejected" jdbcType="DOUBLE" property="bytesRejectedPerSec" />
		<result column="total_produce_requests" jdbcType="DOUBLE" property="totalProduceRequestsPerSec" />
		<result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
	</resultMap>

	<insert id="batchAdd" parameterType="java.util.List">
		INSERT INTO topic_metrics
			(cluster_id, topic_name, messages_in, bytes_in, bytes_out, bytes_rejected, total_produce_requests, gmt_create)
		values
		<foreach item="TopicMetrics" index="index" collection="list" separator=",">
			(#{TopicMetrics.clusterId}, #{TopicMetrics.topicName}, #{TopicMetrics.messagesInPerSec}, #{TopicMetrics.bytesInPerSec}, #{TopicMetrics.bytesOutPerSec}, #{TopicMetrics.bytesRejectedPerSec}, #{TopicMetrics.totalProduceRequestsPerSec}, now())
		</foreach>
	</insert>

	<select id="getTopicMetricsByInterval" parameterType="java.util.Map" resultMap="TopicMetricsMap">
		<![CDATA[
		SELECT * FROM topic_metrics WHERE cluster_id = #{clusterId} AND topic_name = #{topicName} AND gmt_create BETWEEN #{startTime} AND #{endTime}
	]]>
	</select>

	<delete id="deleteBeforeTime" parameterType="java.util.Date">
		<![CDATA[
		DELETE FROM topic_metrics WHERE gmt_create < #{endTime} LIMIT 2000
	]]>
	</delete>
</mapper>