<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="RegionDao">
  <resultMap id="RegionMap" type="RegionDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modify" jdbcType="TIMESTAMP" property="gmtModify" />

    <result column="cluster_id" jdbcType="BIGINT" property="clusterId" />
    <result column="region_name" jdbcType="VARCHAR" property="regionName" />
    <result column="broker_list" jdbcType="VARCHAR" property="brokerList" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
  </resultMap>

  <insert id="insert" parameterType="com.xiaojukeji.kafka.manager.common.entity.po.RegionDO">
    REPLACE region
    (region_name, cluster_id, broker_list, description, operator)
    VALUES
    (#{regionName}, #{clusterId}, #{brokerList}, #{description}, #{operator})
  </insert>

  <insert id="insertOnPG" parameterType="com.xiaojukeji.kafka.manager.common.entity.po.RegionDO">
    insert into region
        (region_name, cluster_id, broker_list, description, operator)
    values (#{regionName}, #{clusterId}, #{brokerList}, #{description}, #{operator})
    on conflict (region_name, cluster_id) do update set broker_list = excluded.broker_list,
                                                        description = excluded.description,
                                                        operator    = excluded.operator
  </insert>

  <delete id="deleteById" parameterType="java.lang.Long">
    DELETE FROM region WHERE id = #{id}
  </delete>

  <update id="updateById" parameterType="com.xiaojukeji.kafka.manager.common.entity.po.RegionDO">
    UPDATE region SET
      region_name=#{regionName},
      cluster_id=#{clusterId},
      broker_list=#{brokerList},
      description=#{description},
      operator=#{operator},
      status=#{status},
      level=#{level}
    WHERE id=#{id}
  </update>

  <select id="getById" parameterType="java.lang.Long" resultMap="RegionMap">
    SELECT * FROM region WHERE id=#{id}
  </select>

  <select id="getByClusterId" parameterType="java.lang.Long" resultMap="RegionMap">
    SELECT * FROM region WHERE cluster_id=#{clusterId}
  </select>

  <select id="listAll" resultMap="RegionMap">
    SELECT * FROM region
  </select>
</mapper>